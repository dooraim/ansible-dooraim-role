# tasks file
---

- name: Create fonts directory
  become: true
  file:
    path: "{{ fonts_path }}"
    mode: '0755'
    state: directory

- name: Copy powerlevel10k recommanded fonts
  become: true
  copy:
    src: "fonts/{{ item }}"
    dest: "{{ fonts_path }}/{{ item }}"
    mode: '0644'
  loop:
    - MesloLGS NF Bold Italic.ttf
    - MesloLGS NF Bold.ttf
    - MesloLGS NF Italic.ttf
    - MesloLGS NF Regular.ttf

- name: ensure fonts directory
  file:
    path: "{{ fonts_path }}"
    state: directory

- name: install packages
  package:
    name:
      - htop
      - ranger
      - bat
      - tmux
      - git
      - zsh
      - picocom
      - minicom
      - ssh
      - tree
      - rsync
      - iperf3
      - build-essential
      - autoconf
      - bison
      - flex
      - texinfo
      - help2man
      - gawk
      - libtool-bin
      - libncurses5-dev
      - unzip
      - qemu-user
      - libssl-dev
      - device-tree-compiler
      - swig
      - python3-distutils
      - python3-dev
      - bridge-utils
      - net-tools
      - nfs-kernel-server
      - uml-utilities
      - rlwrap
      - curl
      - xsel
      - fzf
      - peco
      - fzy
      - fd-find
      - ripgrep
    autoclean: yes

- name: install python packages
  package:
    name:
      - python3
      - python3-dev
      - python3-setuptools
      - python3-pip
    autoclean: yes

- name: Install virtualenv
  pip:
    name: virtualenv
    state: latest
    executable: pip3

- name: create folder for zsh extra files
  file:
    path: ~/.zsh/
    state: directory
  tags: zsh

- name: symlink zsh_plugins
  file:
    src: "{{ role_path }}/files/zsh_plugins.txt"
    path: ~/.zsh_plugins.txt
    state: link
  tags: zsh

- name: symlink zshrc
  file:
    src: "{{ role_path}}/files/zshrc"
    path: ~/.zshrc
    state: link
  tags: zsh

- name: symlink zfiles
  file:
    src: "{{ role_path}}/files/{{ item }}"
    path: "~/.zsh/{{ item }}"
    state: link
  loop:
    - zfunctions
    - zalias
    - zbinds
    - zenv
    - zsoftware
  tags: zsh

- name: symlink zsh_functions
  file:
    src: "{{ role_path}}/files/zsh_functions"
    path: ~/.zsh/zsh_functions
    state: link
  tags: zsh

- name: symlink zsh_zstyle
  file:
    src: "{{ role_path}}/files/zsh_zstyle"
    path: ~/.zsh/zsh_zstyle
    state: link
  ignore_errors: true
  tags: zsh

- name: symlink zsh_private
  file:
    src: "{{ role_path}}/files/zsh_private"
    path: ~/.zsh/private
    state: link
  ignore_errors: true
  tags: zsh

- name: symlink zsh_local
  file:
    src: "{{ role_path}}/files/zsh_local"
    path: ~/.zsh/zsh_local
    state: link
  ignore_errors: true
  tags: zsh

- name: change user shell to zsh
  become: yes
  user:
    name: "{{ ansible_user_id }}"
    shell: /usr/bin/zsh
  ignore_errors: true
  tags: zsh

- name: write .p10k.zsh for users
  become: yes
  become_user: '{{ username }}'
  template:
    src: p10k.zsh.j2
    dest: ~{{ username }}/.p10k.zsh
    backup: yes
    mode: 'u=rw,go=r'

- name: Clone TPM repository
  become: yes
  become_user: "{{ username }}"
  git:
    repo: "https://github.com/tmux-plugins/tpm.git"
    dest: "~{{ username }}/.tmux/plugins/tpm"

- name: write .tmux.conf for user
  become: yes
  become_user: "{{ username }}"
  template:
    src: tmux.conf.j2
    dest: "~{{ username }}/.tmux.conf"
    backup: yes
    mode: "u=rw,go=r"

- name: clone embedded-qemu-labs
  become: yes
  become_user: '{{ username }}'
  git:
    repo: 'git@github.com:dooraim/embedded-qemu-labs.git'
    version: master
    dest: '~{{ username }}/git@github.com:dooraim/embedded-qemu-labs.git'

- name: clone crosstool-ng
  become: yes
  become_user: '{{ username }}'
  git:
    repo: 'https://github.com/crosstool-ng/crosstool-ng'
    version: master
    dest: '~{{ username }}/embedded-qemu-labs/toolchain/'

- name: Download Installer cht.sh
  get_url:
    url: https://cht.sh/cht.sh
    dest: /bin/cht.sh
    mode: '0755'
    force: 'yes'

- name: create folder for vim extra files
  file:
    path: ~/.vim/
    state: directory
  tags: vim

- name: symlink vimrc
  file:
    src: "{{ role_path}}/files/vimrc"
    path: ~/.vimrc
    state: link
  tags: vim

- name: symlink coc init
  file:
    src: "{{ role_path}}/files/cocnvim.vim"
    path: ~/.vim/cocnvim.vim
    state: link
  tags: vim

- name: symlink coc settings
  file:
    src: "{{ role_path}}/files/coc-settings.json"
    path: ~/.vim/coc-settings.json
    state: link
  tags: vim

